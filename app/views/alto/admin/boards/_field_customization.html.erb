<div class="space-y-4" rf rf-model="board" id="field-customization-form">
  <div class="flex items-center justify-between">
    <div>
      <h3 class="text-lg font-medium text-gray-900">Custom Fields</h3>
      <p class="text-sm text-gray-500">Add custom fields to collect additional information when users submit items to this board.</p>
    </div>
    <button type="button" id="add-field-btn" rf-nest-add="fields" class="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
      <svg class="-ml-0.5 mr-2 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
      </svg>
      Add Field
    </button>
  </div>

  <!-- Fields Container -->
  <div id="fields-container" rf-nest-for="fields" class="space-y-4">
    <!-- Existing fields will be rendered here -->
    <% @board.fields.sort_by { |field| field.position || 0 }.each_with_index do |field, index| %>
      <div class="field-item bg-gray-50 border border-gray-200 rounded-lg p-4" data-field-id="<%= field.id %>" rf-nest-item>
        <div class="flex items-start justify-between">
          <div class="flex-1 space-y-4">
            <!-- Field Configuration Row -->
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
              <div>
                <%= render 'shared/forms/input',
                    label_text: 'Label',
                    placeholder: 'Field label...',
                    additional_classes: 'field-label',
                    html_options: { value: field.label } %>
              </div>
              <div>
                <%= render 'shared/forms/dropdown',
                    label_text: 'Type',
                    options: [
                      ['Text Input', 'text_field'],
                      ['Text Area', 'text_area'],
                      ['Number', 'number_field'],
                      ['Date', 'date_field'],
                      ['Dropdown', 'select_field'],
                      ['Checkboxes', 'multiselect_field']
                    ],
                    additional_classes: 'field-type',
                    html_options: {
                      value: field.field_type,
                      'rf-key' => "field-type-#{field.id || "new-#{index}"}"
                    } %>
              </div>
              <div class="flex items-center pt-6">
                <label class="flex items-center">
                  <input type="checkbox" class="field-required h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-2 focus:ring-blue-500" <%= 'checked' if field.required %>>
                  <span class="ml-2 text-sm text-gray-700">Required</span>
                </label>
              </div>
            </div>

            <!-- Options for select fields -->
            <div class="field-options" rf-show-if="field-type-<%= field.id || "new-#{index}" %>=select_field" style="<%= field.select_field? ? '' : 'display: none;' %>">
              <%= render 'shared/forms/text_area',
                  label_text: 'Options (one per line)',
                  placeholder: "Option 1&#10;Option 2&#10;Option 3",
                  rows: 3,
                  additional_classes: 'field-options-select',
                  html_options: { value: field.select_field? ? field.options_array.join("\n") : '' } %>
            </div>

            <!-- Options for multiselect fields -->
            <div class="field-options" rf-show-if="field-type-<%= field.id || "new-#{index}" %>=multiselect_field" style="<%= field.multiselect_field? ? '' : 'display: none;' %>">
              <%= render 'shared/forms/text_area',
                  label_text: 'Options (one per line)',
                  placeholder: "Option 1&#10;Option 2&#10;Option 3",
                  rows: 3,
                  additional_classes: 'field-options-multiselect',
                  html_options: { value: field.multiselect_field? ? field.options_array.join("\n") : '' } %>
            </div>

            <!-- Placeholder text for field types that support it -->
            <div class="field-placeholder" rf-show-if="field-type-<%= field.id || "new-#{index}" %>=text_field,field-type-<%= field.id || "new-#{index}" %>=text_area,field-type-<%= field.id || "new-#{index}" %>=number_field,field-type-<%= field.id || "new-#{index}" %>=date_field" style="<%= field.text_field? || field.text_area? || field.number_field? || field.date_field? ? '' : 'display: none;' %>">
              <%= render 'shared/forms/input',
                  label_text: 'Placeholder Text',
                  placeholder: 'Optional placeholder text...',
                  additional_classes: 'field-placeholder',
                  html_options: { value: field.placeholder } %>
            </div>
          </div>

          <div class="ml-4 flex items-center space-x-2">
            <button type="button" class="field-drag-handle text-gray-400 hover:text-gray-600 cursor-move">
              <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5l-5-5m5 5v-4m0 4h-4"></path>
              </svg>
            </button>
            <button type="button" class="field-delete text-red-400 hover:text-red-600" rf-nest-remove>
              <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
              </svg>
            </button>
          </div>
        </div>
      </div>
    <% end %>
  </div>
</div>

<script>
// RRF handles serialization automatically!
// Just listen for events if needed
document.addEventListener('DOMContentLoaded', function() {
  const container = document.getElementById('field-customization-form')
  if (container) {
    // General update event - fires on ANY change
    container.addEventListener('rf:updated', (e) => {
      console.log(`🔥 Form Updated [${e.detail.action}]:`, e.detail.serializedData)
    })

    // Specific events for detailed handling
    container.addEventListener('rf:field:add', (e) => {
      console.log('➕ Field added:', e.detail)
    })

    container.addEventListener('rf:field:remove', (e) => {
      console.log('🗑️ Field removed:', e.detail)
    })

    container.addEventListener('rf:field:change', (e) => {
      console.log(`🔄 Reactive field '${e.detail.key}' changed:`, e.detail.value)
      console.log(`📊 Current RRF state:`, e.detail.instance.signals.signals)

      // Update preview when field type changes
      if (e.detail.key.startsWith('field-type-')) {
        updateFieldPreview(e.detail.key, e.detail.value)

        // Signals system handles visibility updates automatically - no manual intervention needed
        console.log(`🎯 Signals will handle visibility for ${e.detail.key}`)
      }
    })

    container.addEventListener('rf:serialize', (e) => {
      console.log('📤 Final serialization for form submission')
    })
  }

  function updateFieldPreview(fieldTypeKey, newType) {
    // Could add logic here to update preview labels/placeholders dynamically
    console.log(`🎭 Preview updated for ${fieldTypeKey}: ${newType}`)
  }
})
</script>
